{{- $secretStore := .Values.externalSecrets.secretStore | default "aws-secretsmanager" -}}
{{- if .Values.externalSecrets.enabled -}}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ include "codeok.fullname" . }}-external-secret
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "codeok.labels" . | nindent 4 }}
  annotations:
    secret-refresh: {{ .Values.externalSecrets.refreshId | default "1" | quote }}
    argocd.argoproj.io/sync-wave: "0"
spec:
  refreshInterval: "15m"
  secretStoreRef:
    name: {{ $secretStore }}
    kind: ClusterSecretStore
  target:
    name: {{ include "codeok.fullname" . }}-secrets
    creationPolicy: Owner
  {{- if eq $secretStore "aws-secretsmanager" }}
  dataFrom:
    - extract:
        key: {{ $.Values.externalSecrets.secretPath | default (printf "%s/%s/%s/config" $.Values.global.client $.Values.global.environment $.Values.serviceName) }}
  {{- else }}
  data:
    {{- range .Values.externalSecrets.secretKeys }}
    - secretKey: {{ . }}
      remoteRef:
        key: "/{{ $.Values.global.client }}/{{ $.Values.global.environment }}/{{ $.Values.serviceName }}/{{ . }}"
    {{- end }}
  {{- end }}
{{- end }} 